{"ast":null,"code":"var _jsxFileName = \"/home/byazit/github/personal/elinGit/reactJS/create-react-app-express/client/src/components/UserForm.js\";\nimport React, { Component } from 'react';\nimport UserData from './UserData';\nimport Confirm from './Confirm';\nimport Success from './Success';\nimport DisplayTable from './DisplayTable';\nexport class UserForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      step: 1,\n      orderNumber: 1,\n      name: '',\n      email: '',\n      password: '',\n      repassword: '',\n      error: null,\n      users: []\n    };\n\n    this.nextStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step + 1\n      });\n    };\n\n    this.prevStep = () => {\n      const step = this.state.step;\n      this.setState({\n        step: step - 1\n      });\n    };\n\n    this.startOver = () => {\n      this.setState({\n        step: 1,\n        name: '',\n        email: '',\n        password: '',\n        repassword: ''\n      });\n    };\n\n    this.display = () => {\n      this.componentDidMount();\n      this.setState({\n        step: 4\n      });\n    };\n\n    this.handleChange = input => e => {\n      this.setState({\n        [input]: e.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('/users/').then(res => res.json()).then(result => {\n      this.setState({\n        users: result\n      });\n    }, error => {\n      this.setState({\n        error\n      });\n    });\n  } // Move to the next step\n\n\n  render() {\n    const step = this.state.step;\n    const _this$state = this.state,\n          name = _this$state.name,\n          email = _this$state.email,\n          password = _this$state.password,\n          repassword = _this$state.repassword,\n          users = _this$state.users;\n    const values = {\n      name,\n      email,\n      password,\n      repassword\n    };\n\n    switch (step) {\n      case 1:\n        return React.createElement(UserData, {\n          nextStep: this.nextStep,\n          handleChange: this.handleChange,\n          values: values,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(Confirm, {\n          values: values,\n          prevStep: this.prevStep,\n          nextStep: this.nextStep,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(Success, {\n          startOver: this.startOver,\n          display: this.display,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(DisplayTable, {\n          startOver: this.startOver,\n          users: users,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        });\n    }\n  }\n\n}\nexport default UserForm;","map":{"version":3,"sources":["/home/byazit/github/personal/elinGit/reactJS/create-react-app-express/client/src/components/UserForm.js"],"names":["React","Component","UserData","Confirm","Success","DisplayTable","UserForm","state","step","orderNumber","name","email","password","repassword","error","users","nextStep","setState","prevStep","startOver","display","componentDidMount","handleChange","input","e","target","value","fetch","then","res","json","result","render","values"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport UserData from './UserData';\nimport Confirm from './Confirm';\nimport Success from './Success';\nimport DisplayTable from './DisplayTable';\n\n\nexport class UserForm extends Component {\n    state= {\n        step: 1,\n        orderNumber: 1,\n        name: '',\n        email: '',\n        password: '',\n        repassword: '',\n        error: null,\n        users: []\n    }\n    \n      \n      componentDidMount() {\n        fetch('/users/')\n          .then(res => res.json())\n          .then(\n            (result) => {\n              this.setState({\n                users: result\n              });          \n            },\n            (error) => {\n              this.setState({ error });\n            }\n          )\n      }  \n    // Move to the next step\n    nextStep = () => {\n        const {step} = this.state;\n        this.setState({\n            step: step+1\n        });\n    }\n    // Move to the previous step\n    prevStep = () => {\n        const {step} = this.state;\n        this.setState({ \n            step: step-1\n        });\n    }\n    // Start the program over and update to new order number\n    startOver = () => {\n        this.setState({\n            step: 1,\n            name: '',\n            email: '',\n            password: '',\n            repassword: ''\n        });\n    }\n    display = () =>{\n        this.componentDidMount();\n        this.setState({ step: 4});\n    }\n    // Handle change and add it to the state\n    handleChange = (input) => e => {\n        this.setState({ [input]: e.target.value });\n    }\n    render() {        \n        const {step} = this.state;\n        const { name, email, password, repassword, users }= this.state;\n        const values = { name, email, password, repassword };\n\n        switch(step){\n            case 1: \n                return(\n                    <UserData \n                        nextStep = {this.nextStep}\n                        handleChange = {this.handleChange}\n                        values = {values}\n                    />\n                );\n            case 2:\n                return(\n                    <Confirm \n                        values = {values}\n                        prevStep = {this.prevStep}\n                        nextStep = {this.nextStep}\n                    />\n                );\n            case 3:\n                return(\n                    <Success\n                        startOver = {this.startOver}\n                        display = {this.display}\n                    />\n                );\n            case 4:\n                return(\n                    <DisplayTable \n                        startOver = {this.startOver}\n                        users = {users}\n                    />\n                );\n        }\n    }\n}\n\nexport default UserForm;\n"]},"metadata":{},"sourceType":"module"}